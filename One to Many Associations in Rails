

Start with creating a scaffold User with field username type string:
command for it is: 

=> rails generate scaffold User username:string
After you run this command, you will see a migraiton in db> migrate folder, now we need ot run that migration so to run the migration:

=> rails db:migrate

it will create a user table.and you can check in App> models> User.rb file. 
it will be created automatically.



now to check:

rails c

User.all  #because name of User in class user.rb

This will give us a list of all the records. 

For checking purpose, create 2 users by . 
User.create(username: "Usama")
User.create(username: "Bhatti")





Create users - text directions and code
To create a git feature branch, you can use:

$ git checkout -b nameofbranch

To create a feature branch named create-users-table-model:

$ git checkout -b create-users-table-model

To view list of branches:

$ git branch

To move to master branch:

$ git checkout master

To move back to already created feature branch:

$ git checkout create-users-table-model

Important to remember is to always have master branch deployable to production and work on all new features and additions in feature branches

To create a migration to create users table:

$ rails generate migration create_users

Then within the migration file, add in the following code within the create_table block to add the username, email and timestamps columns (created_at and updated_at):

t.string :username
t.string :email
t.timestamps
To run the migration file and create the users table:

$ rails db:migrate

Now create the User model file. Add a user.rb file under app/models folder and fill in the following:

class User < ApplicationRecord
end
Then you can test out the mode using the rails console. You can start the rails console and try out the following commands (or other commands as you choose):

$ rails console
User.all
User
user = User.create(username: "test", email: "test@example.com")
user = User.create(username: "test2", email: "test2@example.com")
# To grab first user and update their email address:
user = User.find(1) 
# OR
user = User.first
# update the email
user.email = "test3@example.com"
user.save
# To destroy user with id of 2 (if that id exists in your users table, or select
# an appropriate id that does exist
user = User.find(2)
user.destroy
To make a commit of the changes made in the feature branch, from the feature branch itself:

$ git add -A
$ git commit -m "create users table and user model"
To merge the changes made in the feature branch to the master branch first switch to master branch:

$ git checkout master
$ git merge create-users-table-model 
# or the name of your feature branch instead of create-users-table-model
To push your master branch to your online repo:

$ git push origin master

If you want to discard/delete a feature branch that is no longer needed and has been merged to master branch already (not covered in video):

$ git branch -d nameofbranch

To delete a feature branch that is no longer needed but has NOT been merged to master (not covered in video):

git branch -D nameofbranch
